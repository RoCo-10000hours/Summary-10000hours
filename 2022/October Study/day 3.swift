import Foundation

//ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
추가 보충
1.  101~102,104,106~110 page
2.  71 ~ 94 page 복습 
(여기까지하면 1~2주차도 복습 마무리)
//ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ



//ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
//ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
1~2주차 my ppt(2)
//ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
//ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ


my ppt 101 ~ 102page

<<정수형 데이터 type>>
//signed(부호가있는 정수) : 양,0,음의~
//unsigned(부호가없는 정수) : 양,0 ~
---> 생긴이유? 마른수건짜내듯 용량이 필요할때...

//cf... signed = Int8, In16, Int32, Int64
//      Unsigned = Uint8, Un16, Uint32, Uint64
(*기본적으 애플은 Int타입만을 쓰도록 권장하고는 있음)
//시스템 아키텍쳐에 따라 int8-64(비트)로 자동적용
//32비트 컴퓨터에서 int는 Int32로 해석됨
//마치 차를 구매하러가면 구매자에게 적합한 차종을 골라주듯
        //그런역할을 스위프트 내에서 해주는 것

var someUInt = 100
    someUInt = -100             ---->//이건 오류발생
    someUInt = someInt          ---->//이것도 오류발생

/*  모든 정수형데이터타입들은 각자의 타입이 지원하는 데이터의
    최댓값과 최솟값을 알 수 있도록 범위속성지님
--> ex) print("Int32 Min = \(Int32.min) Int32 Max = \(Int32.max)")  */


//ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ


my ppt 104page

<<부동소수점 데이터타입 floating point number >>
Float : 최대 32bit, 적어도 소수점 6자리까지
Double : 최대 64bit

// 3을 단순한 3이아닌 3.0으로 받아들인다.

//ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ


<<Boolean 불리언 데이터 타입>>
//Boolean? 공학용어. 참 or 거짓---> 1 or 0 (참거짓을 1과0으로 표현)
//true와 false 둘 중에서 하나만 입력하고 작은박스에 담기가능
var someBool: Bool = true

/이렇게 하는 이유는???
//시스템에게 이건 '0'아니면 '1'이다라고 true를 대신해 사용하게되면
    someBool = 0  //error               
    someBool = 1  //error
이런식으로 오류가 발생하는 경우가 많기떄문에 숫자대신 true,false를 이용하는것임

//ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ


my ppt 106 ~ 110page

<문자데이터 타입>
//문자,숫자,문장부호,기호,스페이스바("띄어쓰기"), ... 
//cf...swift는 문자를 내부적으로 ''그래핌클러스터(grapheme cluster)'' 형태로저장함

String 타입 : 문자열, 문자들, 문자들의집합
Character 타입 : 문자, 홀문자


/ ( 문자열 보간(string interpolation)개념 )
------> \(   )
//interpolation = 써넣음, 써넣은어구


/ ( '여.러.줄'의 문자열 표현)
-------> ''' 삼중따옴표(처음과~끝에)
//cf 끝의 삼중따옴표의 위치에따라 들여쓰기가 결정되니 신경쓰길

/ ( 이스케이핑 )
//역슬래시 문자를 앞에써서 구볋하는 것
//--->
\n 개행(줄바꿈)
\r 캐리지 리턴
\t 탭
\\ 역슬래시 자체를 쓰고싶을때
// \" 문자열 선언부내부에서 쌍따옴표쓰고싶을때
// \' 문자열 선언부내부에서 홑따옴표쓰고싶을때




//ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ


//ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

//ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ




//ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
//ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
  첫째주 (목,금) 분량
  당시 스위프트를 처음접해서 가볍게 훝어보고 복습일단 미뤄뒀었음
   my ppt 71 ~ 94page
//ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
//ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

-상수 let(렛) : 값이 정해짐. 이 값이 변하지 않음
-변수 var(바) : 값이 변함.
    (그렇기에 일단 습관적으로 ‘let’으로 값을 입력하는 습관을들이고,
    코딩하다가 바꿔야 할 경우 나중에가서 ‘var’로 바꾸자)


-스위프트 타입은 세가지 기본그룹으로 구분!
//(구조체, 클래스, 열거형)
//구조체와 클레스모두 ----> 프로퍼티,이니셜라이저,메서드를 가질 수 있다

-이니셜라이져(init)@@@ ======> 타입의 인스턴스를 초기화함@


-타입은 추론 or 지정



-리터럴과 서브스크림팅
//기본타입은 리터럴(literal)이나 리터럴 값으로 할당할 수 있다
//리터럴이란?? : 원시값
//(문자열 리터럴이란 큰따옴표로 표현)
//(걍 대놓고 우리가 막~ 쓰는 숫자나,,문자열,, 등등)

-서브스크립팅(subscripting)
//배열을 접근하는 단축법


//ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
//ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

my ppt 81 ~ 84page
                    ---> 알고리즘'정렬'관련 맛보기내용
//ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

//ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
my ppt 85 ~ 92page

-옵셔널optional : '옵셔널'로 선언된 값에 실제 값을 할당하면 바로 사용할 수 없다
                    해당값이 [nil일 가능성을 해결해야만]
                    변수의 값을 읽을수 있다
                    이를 해나가는 과정을 '옵셔널 언래핑unwrapping'이라한다

var reading1: Float?
var reading2: Float?
var reading3: Float?
reading1 = 9.8
reading2 = 9.7
reading3 = 9.6
let avgReading = (reading1! + reading2! + reading3!) / 3



